"""
7-base_geometry.py
==================

This module defines a class `BaseGeometry`.
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Usage
-----

The `BaseGeometry` class has a method `integer_validator(name, value)` that validates that `value` is a positive integer.

Example usage:

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)  # Test Case 1: Check if the method correctly validates a positive integer
>>> bg.integer_validator("width", 89)  # Test Case 1: Check if the method correctly validates a positive integer

Invalid Inputs
--------------

The `integer_validator` method raises a TypeError when the value is not an integer.

>>> bg.integer_validator("name", "John")  # Test Case 2: Check if the method raises a TypeError when the value is not an integer
Traceback (most recent call last):
TypeError: name must be an integer

The `integer_validator` method raises a ValueError when the value is less than or equal to 0.

>>> bg.integer_validator("age", 0)  # Test Case 3: Check if the method raises a ValueError when the value is less than or equal to 0
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)  # Test Case 3: Check if the method raises a ValueError when the value is less than or equal to 0
Traceback (most recent call last):
ValueError: distance must be greater than 0
"""
